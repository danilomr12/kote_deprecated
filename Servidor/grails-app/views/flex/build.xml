<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="Compiler/Tester Build" default="masterbuild" basedir=".">
	
	<!-- Load Environment specific properties from properties file -->
	<property file="build.properties" />
	 
	<!-- Load the flex tasks for compiling the actionScript code and running flexUnit --> 
	<taskdef resource="flexTasks.tasks" classpath="${basedir}/libs/flexTasks.jar"/>
	
	<!-- <taskdef resource="flexTasks.tasks" classpath="${FLEX.TASK.DIR}" /> -->
	<taskdef resource="com/adobe/ac/ant/tasks/tasks.properties" classpath="${basedir}/libs/FlexAntTasks.jar"/>
	
    <target name="clean">

        <delete dir="${build}" />
        <delete dir="${report}" />

    </target>

    <target name="prepare" depends="clean">

        <mkdir dir="${build}" />
        <mkdir dir="${report}" />
        <mkdir dir="${report.flexUnit}" />
        <mkdir dir="${report.flexCover}" />

    </target>
	<!-- Init with echoing some info to the console --> 
	<target name="init" depends="prepare">
		<tstamp/>
		<echo message="---------------------------------------------"/>
		<echo message="${project.name}-${project.version} [${TODAY}]"/>
		<echo message="Copyright (c) ${project.year} ${project.owner}"/>
		<echo message="OS : ${os.name}" />
		<echo message="Author: ${author}" />
		<echo message="---------------------------------------------"/>
	</target>
	
	<!-- Compile Main application -->
	<target name="compile" depends="init"> 
		<mxmlc 
				file="${src.main.mxml}" 
				output="${build.main.swf}" 
				actionscript-file-encoding="${ENCODING}" 
				keep-generated-actionscript="false" 
				incremental="false" >
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
			<source-path path-element="${FLEX_HOME}/frameworks"/>
			<compiler.source-path path-element="${src}"/>
			<compiler.include-libraries dir="${basedir}" append="true">
				<include name="${libDir}" />
			</compiler.include-libraries>
		</mxmlc>
	</target>
	
	<target name="tests-compile" depends="init">
		<mxmlc 
				file="${src.testRunner.mxml}" 
				output="${build.testRunner.swf}"
				actionscript-file-encoding="${ENCODING}"
				keep-generated-actionscript="false"
				incremental="false">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
			<source-path path-element="${FLEX_HOME}/frameworks"/>
			<compiler.source-path path-element="${src}"/>
			<compiler.include-libraries dir="${basedir}" append="true">
				<include name="${libDir}" />
			</compiler.include-libraries>
		</mxmlc>
		<mxmlc 
				file="${src.monkeyTest.mxml}" 
				output="${build.monkeyTest.swf}"
				actionscript-file-encoding="${ENCODING}"
				keep-generated-actionscript="false"
				incremental="false">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
			<source-path path-element="${FLEX_HOME}/frameworks"/>
			<compiler.source-path path-element="${src}"/>
			<compiler.include-libraries dir="${basedir}" append="true">
				<include name="${libDir}" />
			</compiler.include-libraries>
		</mxmlc>
	</target>

    <target name="flexcover-open" depends="tests-compile">
        <exec executable="${coverageViewer.exe}" spawn="true">
            <arg line="-output ${basedir}/${report.flexCover.report.cvr} ${build.monkeyTest.cvm}"/>
        </exec>
    </target>
	
	<target name="tests-run" depends="tests-compile, flexcover-open">
		<flexunit
			timeout="60000"
			verbose="true"
			swf="${build.monkeyTest.swf}" 
			toDir="${report.flexUnit}"
			haltonfailure="false" />		
		
		<junitreport todir="${report.flexUnit}">
			<fileset dir="${report.flexUnit}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${report.flexUnit}/html"/>
		</junitreport>
		
		<!--flexunit
			timeout="60000"
			verbose="true"
			swf="${build.monkeyTest.swf}" 
			toDir="${report.flexUnit}"
			haltonfailure="true" /-->	
	</target>
		
	<target name="wrapper" depends="compile" description="Creates the HTML wrapper">
		<!-- Copy the html-wrapper dir except the index.template.html -->
		<copy todir="${build}">
			<fileset dir="${wrapper.dir}">
				<exclude name="**/index.template.html" />
			</fileset>
		</copy>
		<!-- Copy and rename the index.template.html -->
		<copy file="${wrapper.dir}/index.template.html" tofile="${html.file}" />
		
		<!-- Replace placeholders in the html with our variables -->
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{width\}" replace="100%"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{height\}" replace="100%"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{title\}" replace="{project.name}" encoding="utf-8"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{version_major\}" replace="9"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{version_minor\}" replace="0"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{version_revision\}" replace="0"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{application\}" replace="${application.name}"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{bgcolor\}" replace="#FFFFFF"/>
		<replaceregexp 
			file="${html.file}" flags="gs" match="\$\{swf\}" replace="${application.name}"/> 
	</target>
	
	<target name="masterbuild"
		depends="clean, tests-run, wrapper"
		description="Build Complete"/>
</project>