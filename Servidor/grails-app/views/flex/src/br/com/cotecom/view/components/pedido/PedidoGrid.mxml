<?xml version="1.0" encoding="utf-8"?>
<mx:DataGrid xmlns:mx="http://www.adobe.com/2006/mxml"
             editable="false"
             verticalGridLines="true"
             fontSize="13"
             horizontalGridLines="true"
             horizontalGridLineColor="#BFBFBF"
             color="#555555"
             sortableColumns="true"
             paddingLeft="0" paddingRight="0"
             rowCount="20">

    <mx:Script>
		<![CDATA[
        import br.com.cotecom.model.domain.pedido.ItemPedido;
        import br.com.cotecom.model.domain.resposta.ItemResposta;
        import br.com.cotecom.model.services.comprador.GerenciadorCotacao;
        import br.com.cotecom.model.services.resposta.GerenciadorResposta;
        import br.com.cotecom.view.components.resposta.BuscaEAdicioneProdutoAItemDeResposta;
        import br.com.cotecom.view.util.DinheiroUtil;
        import br.com.cotecom.view.util.Icons;

        import mx.controls.DataGrid;
        import mx.controls.dataGridClasses.DataGridColumn;
        import mx.core.Application;
        import mx.core.IFlexDisplayObject;
        import mx.events.CollectionEvent;
        import mx.events.DataGridEvent;
        import mx.events.ListEvent;
        import mx.managers.PopUpManager;

        public var gerenciadorResposta:GerenciadorResposta = GerenciadorResposta.getInstance();

        public static function precoUnitario(data:Object, column:DataGridColumn):String {
            var item:ItemPedido = data as ItemPedido;
            return item.precoUnitario != 0 ? DinheiroUtil.formatAsReal(item.precoUnitario, 3) : "";
        }

        public static function precoEmbalagem(data:Object, column:DataGridColumn):String {
            var item:ItemPedido = data as ItemPedido;
            return item.precoEmbalagem != 0 ? DinheiroUtil.formatAsReal(item.precoEmbalagem) : "";
        }

        public function onItemEditEnd(event:DataGridEvent):void {
            var item:ItemResposta = (event.target as DataGrid).dataProvider[event.rowIndex];
            var textInputValue:String = event.target.itemEditorInstance.text;
            textInputValue = textInputValue.replace(",", ".");
            if (!textInputValue.match(/\d\.($|\d)/) && !textInputValue.match(/\.($|\d)/)) {
                textInputValue = (Number(textInputValue) / 100).toString();
            }
            textInputValue = numberFormatter.format(textInputValue);
            var itemResposta:ItemResposta = (event.itemRenderer.data as ItemResposta);
            var valorNumericoTextInput:Number = Number(textInputValue);
            if (event.columnIndex == 4 || event.columnIndex == 6) {
                if (item.precoUnitario != valorNumericoTextInput) {
                    itemResposta.precoUnitario = valorNumericoTextInput;
                    gerenciadorResposta.setItemAsNotSaved(item);
                }
            } else if (event.columnIndex == 3 || event.columnIndex == 5) {
                if (item.precoEmbalagem != valorNumericoTextInput) {
                    itemResposta.precoEmbalagem = valorNumericoTextInput;
                    gerenciadorResposta.setItemAsNotSaved(item);
                }
            }
        }

        private function showWindow(window:IFlexDisplayObject):void {
            var app:* = Application.application;
            PopUpManager.addPopUp(window, app, true);
            PopUpManager.centerPopUp(window);
        }


        private function itemKeydown(event:KeyboardEvent):void {
            if ((event.keyCode == Keyboard.UP || event.keyCode == Keyboard.DOWN)
                    && event.currentTarget.editedItemPosition != null) {
                var rowIndex:* = DataGrid(event.currentTarget).editedItemPosition.rowIndex;
                var columnIndex:* = DataGrid(event.currentTarget).editedItemPosition.columnIndex;
                if (event.keyCode == Keyboard.UP && this.editedItemPosition.rowIndex > 0) {
                    this.editedItemPosition = {columnIndex:columnIndex, rowIndex:rowIndex - 1};
                } else if (event.keyCode == Keyboard.DOWN && this.editedItemPosition.rowIndex < this.dataProvider.length - 1) {
                    this.editedItemPosition = {columnIndex:columnIndex, rowIndex:rowIndex + 1};
                }
                this.dataProvider.dispatchEvent(new CollectionEvent(CollectionEvent.COLLECTION_CHANGE));
            }
        }
        ]]>
	</mx:Script>

    <mx:NumberFormatter id="numberFormatter"
                        useThousandsSeparator="false"
                        precision="2" />

    <mx:columns>
        <mx:DataGridColumn headerText="Quantidade" dataField="qtdPedida" width="65" editable="false" sortable="true"/>
        <mx:DataGridColumn id="colunaDescricao" headerText="Descrição" dataField="descricao" editable="false" textAlign="left" sortable="true"/>
        <mx:DataGridColumn headerText="Embalagem" dataField="embalagem" width="85" editable="false" />

        <mx:DataGridColumn id="colunaPrecoEmbalagemRepresentante" sortable="true"
                           headerText="Preço Embalagem" labelFunction="precoEmbalagem" width="100"
                           backgroundColor="#F2F3F8" color="#000000" textAlign="center"/>
        <mx:DataGridColumn id="colunaPrecoUnitarioRepresentante" sortable="true"
                           headerText="Preço Unitário" labelFunction="precoUnitario" width="100"
                           backgroundColor="#F2F3F8" color="#000000" textAlign="center" />

        <mx:DataGridColumn editable="false" width="50" id="colunaObs" headerText="Obs" dataField="obs" visible="true" sortable="false"/>
    </mx:columns>

</mx:DataGrid>
